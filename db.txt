DROP TABLE IF EXISTS USUARIO;
CREATE TABLE USUARIO(
    codigo INT(10) PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    cedula INT(10) NOT NULL,
    correo_institucional VARCHAR(50) NOT NULL,
    correo_personal VARCHAR(50) NOT NULL,
    genero VARCHAR(50) NOT NULL,
    numero_telefonico INT(10) NOT NULL,
    fecha_nacimiento DATE NOT NULL,
    tipo VARCHAR(1) NOT NULL CHECK (tipo IN ('P', 'E'))
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS PROFESOR;
CREATE TABLE PROFESOR(
    codigo INT(10) PRIMARY KEY,
    oficina VARCHAR(50) NOT NULL,
    area_actuacion VARCHAR(50) NOT NULL,
    facultad VARCHAR(50) NOT NULL,
    FOREIGN KEY (codigo) REFERENCES USUARIO(codigo),
    FOREIGN KEY (facultad) REFERENCES FACULTAD(nombre_facultad)
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS ESTUDIANTE;
CREATE TABLE ESTUDIANTE(
    codigo INT(10) PRIMARY KEY,
    creditos_aprobados INT(10) NOT NULL,
    FOREIGN KEY (codigo) REFERENCES USUARIO(codigo)
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS PREGRADO;
CREATE TABLE PREGRADO(
    nivel_formacion VARCHAR(50) PRIMARY KEY -- tecnologico o profesional
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS POSGRADO;
CREATE TABLE POSGRADO(
    tipo VARCHAR(50) PRIMARY KEY -- Especializaciones, Maestr√≠as o Doctorados.
) ENGINE=InnoDB;;

-- programa academico pertenece a pregrado o posgrado
DROP TABLE IF EXISTS PROGRAMA_ACADEMICO;
CREATE TABLE PROGRAMA_ACADEMICO(
    nombre VARCHAR(50) PRIMARY KEY,
    codigo INT(10) NOT NULL,
    numero_creditos INT(10) NOT NULL,
    nivel_formacion_pregrado VARCHAR(50) REFERENCES PREGRADO(nivel_formacion),
    tipo_posgrado VARCHAR(50) REFERENCES POSGRADO(tipo)
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS ASIGNATURA;
CREATE TABLE ASIGNATURA(
    nombre VARCHAR(50) PRIMARY KEY,
    codigo INT(10) NOT NULL,
    numero_creditos INT(10) NOT NULL
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS PROGRAMA_ACADEMICO_X_ASIGNATURA;
CREATE TABLE PROGRAMA_ACADEMICO_X_ASIGNATURA(
    programa_academico VARCHAR(50) NOT NULL,
    asignatura VARCHAR(50) NOT NULL,
    FOREIGN KEY (programa_academico) REFERENCES PROGRAMA_ACADEMICO(nombre),
    FOREIGN KEY (asignatura) REFERENCES ASIGNATURA(nombre)
) ENGINE=InnoDB;;

-- PROFESOR_X_ASIGNATURA
DROP TABLE IF EXISTS GRUPO;
CREATE TABLE GRUPO(
    profesor INT(10) NOT NULL,
    asignatura VARCHAR(50) NOT NULL,
    FOREIGN KEY (profesor) REFERENCES PROFESOR(codigo),
    FOREIGN KEY (asignatura) REFERENCES ASIGNATURA(nombre)
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS FACULTAD;
CREATE TABLE FACULTAD(
    nombre_facultad VARCHAR(50) PRIMARY KEY,
    numero_contacto INT(10) NOT NULL,
    correo VARCHAR(50) NOT NULL
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS ADMINISTRATIVO;
CREATE TABLE ADMINISTRATIVO (
    cedula INT(10) PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    salario INT(10) NOT NULL,
    facultad VARCHAR(50) NOT NULL,
    FOREIGN KEY (facultad) REFERENCES FACULTAD(nombre_facultad)
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS SOLICITUD;
CREATE TABLE SOLICITUD(
    codigo INT(10) PRIMARY KEY,
    fecha_solicitud DATE NOT NULL,
    tipo_solicitud VARCHAR(50) NOT NULL,
    valor INT(10) NOT NULL,
    RECEPCIONISTA INT(10) NOT NULL,
    REVISOR INT(10) NOT NULL,
    FOREIGN KEY (RECEPCIONISTA) REFERENCES ADMINISTRATIVO(codigo),
    FOREIGN KEY (REVISOR) REFERENCES ADMINISTRATIVO(codigo)
) ENGINE=InnoDB;;

DROP TABLE IF EXISTS DETALLE_CALIFICACION;
CREATE TABLE DETALLE_CALIFICACION(
    puntuacion INT(10),
    semestre VARCHAR(50) NOT NULL,
    grupo INT(10) NOT NULL,
    estudiante INT(10) NOT NULL,
    FOREIGN KEY (grupo) REFERENCES GRUPO(codigo),
    FOREIGN KEY (estudiante) REFERENCES ESTUDIANTE(codigo),
    PRIMARY KEY (grupo, estudiante, semestre)
) ENGINE=InnoDB;;